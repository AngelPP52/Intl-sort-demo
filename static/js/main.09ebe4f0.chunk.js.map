{"version":3,"sources":["SortID/index.tsx","SortVi/index.tsx","SortZhHantTW/index.tsx","SortZhHans/index.tsx","SortEn/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SortID","props","columns","title","dataIndex","sorter","a","b","Intl","Collator","compare","name","defaultSortOrder","data","map","item","index","key","dataSource","pagination","pageSize","SortVi","SortZhHantTW","SortZhHans","SortEn","TabPane","Tabs","App","className","defaultActiveKey","tab","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09ebe4f0.chunk.js","sourcesContent":["\n\nimport { Table } from 'antd';\nimport { SortOrder } from 'antd/lib/table/interface';\nimport React from 'react'\nimport './index.css';\n\ninterface PropsTypes {\n\n}\n\nfunction SortID(props: PropsTypes) {\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            sorter: (a: any, b: any) => new Intl.Collator('ID').compare(a.name, b.name),\n            defaultSortOrder: 'ascend' as SortOrder\n        }\n    ];\n    const source = [\n        'Dashboard Saya',\n        'Toko',\n        'Toko Saya',\n        'Produk',\n        'Produk Online',\n        'Produk Fisik',\n        'Stok',\n        'Lokasi 2 Saya',\n        'Lokasi 1 Saya',\n        'Lokasi , Saya',\n        'Lokasi . Saya',\n    ]\n\n    const data = source.map((item, index) => ({ name: item, key: index }));\n\n    return (\n        <div>\n            <Table columns={columns} dataSource={data} pagination={{pageSize: 100}} />\n        </div>\n    )\n}\n\nexport default SortID;\n\n","\n\nimport { Table } from 'antd';\nimport { SortOrder } from 'antd/lib/table/interface';\nimport React from 'react'\nimport './index.css';\n\ninterface PropsTypes {\n\n}\n\nfunction SortVi(props: PropsTypes) {\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            sorter: (a: any, b: any) => new Intl.Collator('vi').compare(a.name, b.name),\n            defaultSortOrder: 'ascend' as SortOrder\n        }\n    ];\n    const source = [\n        'Bảng tổng quan',\n        'Shop',\n        'Quản lý shop',\n        'Sản phẩm',\n        'Sản Phẩm Đăng Bán',\n        'Sản Phẩm Thực Tế',\n        'Tồn kho',\n        'Vị trí 2 kho hàng',\n        'Vị trí 1 kho hàng',\n        'Vị trí , kho hàng',\n        'Vị trí . kho hàng',\n    ]\n\n    const data = source.map((item, index) => ({ name: item, key: index }));\n\n    return (\n        <div>\n            <Table columns={columns} dataSource={data} pagination={{pageSize: 100}} />\n        </div>\n    )\n}\n\nexport default SortVi;\n\n","\n\nimport { Table } from 'antd';\nimport { SortOrder } from 'antd/lib/table/interface';\nimport React from 'react'\nimport './index.css';\n\ninterface PropsTypes {\n\n}\n\nfunction SortZhHantTW(props: PropsTypes) {\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            sorter: (a: any, b: any) => new Intl.Collator('zh-Hant-TW').compare(a.name, b.name),\n            defaultSortOrder: 'ascend' as SortOrder\n        }\n    ];\n    const source = [\n        '我的儀表板',\n        '賣場',\n        '我的商店',\n        '商品',\n        '賣場商品',\n        '實體商品',\n        '庫存',\n        '我的 2 儲位',\n        '我的 1 儲位',\n        '我的 , 儲位',\n        '我的 . 儲位',\n    ]\n\n    const data = source.map((item, index) => ({ name: item, key: index }));\n\n    return (\n        <div>\n            <Table columns={columns} dataSource={data} pagination={{pageSize: 100}} />\n        </div>\n    )\n}\n\nexport default SortZhHantTW;\n\n","\n\nimport { Table } from 'antd';\nimport { SortOrder } from 'antd/lib/table/interface';\nimport React from 'react'\nimport './index.css';\n\ninterface PropsTypes {\n\n}\n\nfunction SortZhHans(props: PropsTypes) {\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            sorter: (a: any, b: any) => new Intl.Collator('zh-Hans').compare(a.name, b.name),\n            defaultSortOrder: 'ascend' as SortOrder\n        }\n    ];\n    const source = [\n        '我的仪表板',\n        '卖场',\n        '我的商店',\n        '商品',\n        '卖场商品',\n        '实体商品',\n        '库存',\n        '我的 2 储位',\n        '我的 1 储位',\n        '我的 , 储位',\n        '我的 . 储位',\n    ]\n\n    const data = source.map((item, index) => ({name: item, key: index}));\n\n    return (\n        <div>\n            <Table columns={columns} dataSource={data} pagination={{pageSize: 100}} />\n        </div>\n    )\n}\n\nexport default SortZhHans;\n\n","\n\nimport { Table } from 'antd';\nimport { SortOrder } from 'antd/lib/table/interface';\nimport React from 'react'\nimport './index.css';\n\ninterface PropsTypes {\n\n}\n\nfunction SortEn(props: PropsTypes) {\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            sorter: (a: any, b: any) => new Intl.Collator('en').compare(a.name, b.name),\n            defaultSortOrder: 'ascend' as SortOrder\n        }\n    ];\n    const source = [\n        'My Dashboard',\n        'Shop',\n        'My Shops',\n        'Product',\n        'Platform Products',\n        'Physical Products',\n        'Inventory',\n        'My 2 Locations',\n        'My 1 Locations',\n        'My , Locations',\n        'My . Locations'\n    ]\n\n    const data = source.map((item, index) => ({name: item, key: index}));\n\n    return (\n        <div>\n            <Table columns={columns} dataSource={data} pagination={{pageSize: 100}} />\n        </div>\n    )\n}\n\nexport default SortEn;\n\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Tabs } from 'antd';\nimport 'antd/dist/antd.css';\nimport SortID from './SortID';\nimport SortVi from './SortVi';\nimport SortZhHantTW from './SortZhHantTW';\nimport SortZhHans from './SortZhHans';\nimport SortEn from './SortEn';\n\nconst { TabPane } = Tabs;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>Intl-Sort Demo</p>\n        <Tabs defaultActiveKey=\"1\">\n          <TabPane tab=\"简体中文\" key=\"1\">\n            <SortZhHans />\n          </TabPane>\n          <TabPane tab=\"繁体中文\" key=\"2\">\n            <SortZhHantTW />\n          </TabPane>\n          <TabPane tab=\"English\" key=\"3\">\n            <SortEn />\n          </TabPane>\n          <TabPane tab=\"Bahasa\" key=\"4\">\n            <SortID />\n          </TabPane>\n          <TabPane tab=\"Vietnamese\" key=\"5\">\n            <SortVi />\n          </TabPane>\n        </Tabs>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}